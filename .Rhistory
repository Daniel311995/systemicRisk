# Assign indicator:
dt_sub <- unique(dt[date_q=="2007 Q1", .(bankid, bsize_)])[,type:=ifelse(bsize_>quantile(bsize_, 0.75),"IRB", "SA")]
dt_sub[,bsize_:=NULL]
setkey(dt, bankid)
setkey(dt_sub, bankid)
dt <- dt_sub[dt]
# Prepare plot:
dt_plot <- melt(dt[date_q=="2007 Q1"], id.vars = c("firmid", "bankid", "date_q", "type"), measure.vars = c("bsize_", "total_assets_mn"))
levels(dt_plot$variable) <- c("Logs", "Levels (millions)")
p <- ggplot(data=dt_plot, aes(x=value, fill=type)) +
geom_histogram(colour="blue") +
scale_fill_manual(
name="Risk-weighting:",
values=c("lightblue", "white")
) +
labs(
x = "Total assets",
y = "Count"
) +
facet_wrap(
~ variable,
scales = "free"
)
p
dt[,basel_lev:=(bcet1_*exp(bsizerw_))/exp(bsize_)] # compute leverage ratio
dt_plot <- unique(melt(dt, id.vars = c("bankid", "date_q", "type"), measure.vars = c("bcet1_", "basel_lev")))
dt_plot <- dt_plot[,.(value=mean(value)),by=.(date_q, type, variable)][order(date_q, type, variable)] # averages
levels(dt_plot$variable) <- c("Tier-1", "Basel III")
p1 <- ggplot(data=dt_plot, aes(x=date_q, y=value, colour=type, linetype=variable)) +
geom_line() +
scale_color_discrete(name="Risk-weighting:") +
scale_linetype_discrete(name="Ratio:") +
labs(
x="Time",
y="Ratio"
)
dt_plot <- dt_plot[,.(value=value[type=="IRB"] - value[type=="SA"]), by=.(date_q, variable)]
dt_plot <- dt_plot[,.(date_q=date_q,value=(value-value[date_q=="2007 Q1"])/value[date_q=="2007 Q1"]*100),by=variable]
p2 <- ggplot(dt_plot, aes(x=date_q, y=value, fill=variable)) +
geom_col(position = "dodge") +
labs(
x="Time",
y="Difference"
) +
scale_fill_discrete(name="Ratio:")
library(gridExtra)
do.call("grid.arrange", args = list(list(p1,p2)))
do.call("grid.arrange", args = c(list(p1,p2)))
dt_plot <- unique(melt(dt, id.vars = c("bankid", "date_q", "type"), measure.vars = c("bcet1_", "basel_lev")))
dt_plot <- dt_plot[,.(value=mean(value)),by=.(date_q, type, variable)][order(date_q, type, variable)] # averages
levels(dt_plot$variable) <- c("Tier-1", "Basel III")
p1 <- ggplot(data=dt_plot, aes(x=date_q, y=value, colour=type, linetype=variable)) +
geom_line() +
scale_color_discrete(name="Risk-weighting:") +
scale_linetype_discrete(name="Ratio:") +
labs(
x="Time",
y="Ratio"
) +
geom_vline(xintercept = "2007 Q1")
dt_plot <- dt_plot[,.(value=value[type=="IRB"] - value[type=="SA"]), by=.(date_q, variable)]
dt_plot <- dt_plot[,.(date_q=date_q,value=(value-value[date_q=="2007 Q1"])/value[date_q=="2007 Q1"]*100),by=variable]
p2 <- ggplot(dt_plot, aes(x=date_q, y=value, fill=variable)) +
geom_col(position = "dodge") +
labs(
x="Time",
y="Difference"
) +
scale_fill_discrete(name="Ratio:")
library(gridExtra)
do.call("grid.arrange", args = c(list(p1,p2)))
p1
zoo::as.yearqtr("2007 Q1")
dt_plot <- unique(melt(dt, id.vars = c("bankid", "date_q", "type"), measure.vars = c("bcet1_", "basel_lev")))
dt_plot <- dt_plot[,.(value=mean(value)),by=.(date_q, type, variable)][order(date_q, type, variable)] # averages
levels(dt_plot$variable) <- c("Tier-1", "Basel III")
p1 <- ggplot(data=dt_plot, aes(x=date_q, y=value, colour=type, linetype=variable)) +
geom_line() +
scale_color_discrete(name="Risk-weighting:") +
scale_linetype_discrete(name="Ratio:") +
labs(
x="Time",
y="Ratio"
) +
geom_vline(xintercept = zoo::as.yearqtr("2007 Q1"))
dt_plot <- dt_plot[,.(value=value[type=="IRB"] - value[type=="SA"]), by=.(date_q, variable)]
dt_plot <- dt_plot[,.(date_q=date_q,value=(value-value[date_q=="2007 Q1"])/value[date_q=="2007 Q1"]*100),by=variable]
p2 <- ggplot(dt_plot, aes(x=date_q, y=value, fill=variable)) +
geom_col(position = "dodge") +
labs(
x="Time",
y="Difference"
) +
scale_fill_discrete(name="Ratio:")
library(gridExtra)
do.call("grid.arrange", args = c(list(p1,p2)))
do.call("grid.arrange", args = c(list(p1,p2)))
?grid.arrange
do.call("grid.arrange", args = c(list(p1,p2), heigts=c(2,1)))
do.call("grid.arrange", args = list(list(p1,p2), heigts=c(2,1)))
do.call("grid.arrange", args = c(list(p1,p2), heigts=list(2,1)))
do.call("grid.arrange", args = c(list(p1,p2), heights=list(2,1)))
do.call("grid.arrange", args = c(list(p1,p2), heights=c(2,1)))
do.call("grid.arrange", args = c(list(p1,p2)))
dt_plot <- unique(melt(dt, id.vars = c("bankid", "date_q", "type"), measure.vars = c("bcet1_", "basel_lev")))
dt_plot <- dt_plot[,.(value=mean(value)),by=.(date_q, type, variable)][order(date_q, type, variable)] # averages
levels(dt_plot$variable) <- c("Tier-1", "Basel III")
p1 <- ggplot(data=dt_plot, aes(x=date_q, y=value, linetype=type, colour=variable)) +
geom_line() +
scale_color_discrete(name="Ratio:") +
scale_linetype_discrete(name="Risk-weighting:") +
labs(
x="Time",
y="Ratio"
) +
geom_vline(xintercept = zoo::as.yearqtr("2007 Q1"))
dt_plot <- dt_plot[,.(value=value[type=="IRB"] - value[type=="SA"]), by=.(date_q, variable)]
dt_plot <- dt_plot[,.(date_q=date_q,value=(value-value[date_q=="2007 Q1"])/value[date_q=="2007 Q1"]*100),by=variable]
p2 <- ggplot(dt_plot, aes(x=date_q, y=value, fill=variable)) +
geom_col(position = "dodge") +
labs(
x="Time",
y="Difference"
) +
scale_fill_discrete(name="Ratio:")
library(gridExtra)
do.call("grid.arrange", args = c(list(p1,p2)))
dt_plot <- unique(melt(dt, id.vars = c("bankid", "date_q", "type"), measure.vars = c("bcet1_", "basel_lev")))
dt_plot <- dt_plot[,.(value=mean(value)),by=.(date_q, type, variable)][order(date_q, type, variable)] # averages
levels(dt_plot$variable) <- c("Tier-1", "Basel III")
p1 <- ggplot(data=dt_plot, aes(x=date_q, y=value, colour=type, linetype=variable)) +
geom_line() +
scale_color_discrete(name="Risk-weighting:") +
scale_linetype_discrete(name="Ratio:") +
labs(
x="Time",
y="Ratio"
) +
geom_vline(xintercept = zoo::as.yearqtr("2007 Q1"))
dt_plot <- dt_plot[,.(value=value[type=="IRB"] - value[type=="SA"]), by=.(date_q, variable)]
dt_plot <- dt_plot[,.(date_q=date_q,value=(value-value[date_q=="2007 Q1"])/value[date_q=="2007 Q1"]*100),by=variable]
p2 <- ggplot(dt_plot, aes(x=date_q, y=value, linetype=variable)) +
geom_col(position = "dodge", fill="white") +
labs(
x="Time",
y="Difference"
) +
scale_linetype_discrete(name="Ratio:")
library(gridExtra)
do.call("grid.arrange", args = c(list(p1,p2)))
dt_plot <- dt_plot[,.(value=value[type=="IRB"] - value[type=="SA"]), by=.(date_q, variable)]
p2 <- ggplot(dt_plot, aes(x=date_q, y=value, linetype=variable)) +
geom_col(position = "dodge", fill="white", colour="black") +
labs(
x="Time",
y="Difference"
) +
scale_linetype_discrete(name="Ratio:")
library(gridExtra)
do.call("grid.arrange", args = c(list(p1,p2)))
p2 <- ggplot(dt_plot, aes(x=date_q, y=value, linetype=variable)) +
geom_col(position = "dodge", fill="white", colour="black") +
labs(
x="Time",
y="Difference"
) +
scale_linetype_discrete(name="Ratio:") +
+ guides(
linetype=F
)
?guides
p2 <- ggplot(dt_plot, aes(x=date_q, y=value, linetype=variable)) +
geom_col(position = "dodge", fill="white", colour="black") +
labs(
x="Time",
y="Difference"
) +
scale_linetype_discrete(name="Ratio:") +
+ guides(
linetype="none"
)
p2 <- ggplot(dt_plot, aes(x=date_q, y=value, linetype=variable)) +
geom_col(position = "dodge", fill="white", colour="black") +
labs(
x="Time",
y="Difference"
) +
scale_linetype_discrete(name="Ratio:") +
+ guides(
linetype="none"
) +
theme(legend.position="none")
p2 <- ggplot(dt_plot, aes(x=date_q, y=value, linetype=variable)) +
geom_col(position = "dodge", fill="white", colour="black") +
labs(
x="Time",
y="Difference"
) +
scale_linetype_discrete(name="Ratio:") +
theme(legend.position="none")
do.call("grid.arrange", args = c(list(p1,p2)))
p1 <- ggplot(data=dt_plot, aes(x=date_q, y=value, colour=type, linetype=variable)) +
geom_line() +
scale_color_discrete(name="Risk-weighting:") +
scale_linetype_discrete(name="Ratio:") +
labs(
x="Time",
y="Ratio"
) +
geom_vline(xintercept = zoo::as.yearqtr("2007 Q1")) +
theme(legend.position="top")
do.call("grid.arrange", args = c(list(p1,p2)))
p1 <- ggplot(data=dt_plot, aes(x=date_q, y=value, colour=type, linetype=variable)) +
geom_line() +
scale_color_discrete(name="Risk-weighting:") +
scale_linetype_discrete(name="Ratio:") +
labs(
x="Time",
y="Ratio"
) +
geom_vline(xintercept = zoo::as.yearqtr("2007 Q1")) +
theme(legend.position="top")
p1
p1 <- ggplot(data=dt_plot, aes(x=date_q, y=value, colour=type, linetype=variable)) +
geom_line() +
scale_color_discrete(name="Risk-weighting:") +
scale_linetype_discrete(name="Ratio:") +
labs(
x="Time",
y="Ratio"
) +
geom_vline(xintercept = zoo::as.yearqtr("2007 Q1"))
p1
dt_plot <- unique(melt(dt, id.vars = c("bankid", "date_q", "type"), measure.vars = c("bcet1_", "basel_lev")))
dt_plot <- dt_plot[,.(value=mean(value)),by=.(date_q, type, variable)][order(date_q, type, variable)] # averages
levels(dt_plot$variable) <- c("Tier-1", "Basel III")
p1 <- ggplot(data=dt_plot, aes(x=date_q, y=value, colour=type, linetype=variable)) +
geom_line() +
scale_color_discrete(name="Risk-weighting:") +
scale_linetype_discrete(name="Ratio:") +
labs(
x="Time",
y="Ratio"
) +
geom_vline(xintercept = zoo::as.yearqtr("2007 Q1")) +
theme(legend.position="top")
dt_plot <- dt_plot[,.(value=value[type=="IRB"] - value[type=="SA"]), by=.(date_q, variable)]
dt_plot <- dt_plot[,.(date_q=date_q,value=(value-value[date_q=="2007 Q1"])/value[date_q=="2007 Q1"]*100),by=variable]
p2 <- ggplot(dt_plot, aes(x=date_q, y=value, linetype=variable)) +
geom_col(position = "dodge", fill="white", colour="black") +
labs(
x="Time",
y="Difference"
) +
scale_linetype_discrete(name="Ratio:") +
theme(legend.position="none")
library(gridExtra)
do.call("grid.arrange", args = c(list(p1,p2)))
do.call("grid.arrange", args = c(list(p1,p2)))
grid.arrange(arrangeGrob(p1,p2), heights=c(2,1), ncol=1)
grid.arrange(p1,p2, heights=c(2,1), ncol=1)
dt_plot <- unique(melt(dt, id.vars = c("bankid", "date_q", "type"), measure.vars = c("bcet1_", "basel_lev")))
dt_plot <- dt_plot[,.(value=mean(value)),by=.(date_q, type, variable)][order(date_q, type, variable)] # averages
levels(dt_plot$variable) <- c("Tier-1", "Basel III")
p1 <- ggplot(data=dt_plot, aes(x=date_q, y=value, colour=type, linetype=variable)) +
geom_line() +
scale_color_discrete(name="Risk-weighting:") +
scale_linetype_discrete(name="Ratio:") +
labs(
x=NA,
y="Ratio"
) +
geom_vline(xintercept = zoo::as.yearqtr("2007 Q1")) +
theme(legend.position="top")
dt_plot <- dt_plot[,.(value=value[type=="IRB"] - value[type=="SA"]), by=.(date_q, variable)]
dt_plot <- dt_plot[,.(date_q=date_q,value=(value-value[date_q=="2007 Q1"])/value[date_q=="2007 Q1"]*100),by=variable]
p2 <- ggplot(dt_plot, aes(x=date_q, y=value, linetype=variable)) +
geom_col(position = "dodge", fill="white", colour="black") +
labs(
x="Time",
y="Difference"
) +
scale_linetype_discrete(name="Ratio:") +
theme(legend.position="none")
library(gridExtra)
do.call("grid.arrange", args = c(list(p1,p2)))
grid.arrange(p1,p2, heights=c(2,1), ncol=1)
dt_plot <- unique(melt(dt, id.vars = c("bankid", "date_q", "type"), measure.vars = c("bcet1_", "basel_lev")))
dt_plot <- dt_plot[,.(value=mean(value)),by=.(date_q, type, variable)][order(date_q, type, variable)] # averages
levels(dt_plot$variable) <- c("Tier-1", "Basel III")
p1 <- ggplot(data=dt_plot, aes(x=date_q, y=value, colour=type, linetype=variable)) +
geom_line() +
scale_color_discrete(name="Risk-weighting:") +
scale_linetype_discrete(name="Ratio:") +
labs(
x=NA,
y="Ratio"
) +
geom_vline(xintercept = zoo::as.yearqtr("2007 Q1")) +
theme(legend.position="top")
dt_plot <- dt_plot[,.(value=value[type=="IRB"] - value[type=="SA"]), by=.(date_q, variable)]
dt_plot <- dt_plot[,.(date_q=date_q,value=(value-value[date_q=="2007 Q1"])/value[date_q=="2007 Q1"]*100),by=variable]
p2 <- ggplot(dt_plot, aes(x=date_q, y=value, linetype=variable)) +
geom_col(position = "dodge", fill="white", colour="black") +
labs(
x="",
y="Difference"
) +
scale_linetype_discrete(name="Ratio:") +
theme(legend.position="none")
library(gridExtra)
grid.arrange(p1,p2, heights=c(2,1), ncol=1)
dt_plot <- unique(melt(dt, id.vars = c("bankid", "date_q", "type"), measure.vars = c("bcet1_", "basel_lev")))
dt_plot <- dt_plot[,.(value=mean(value)),by=.(date_q, type, variable)][order(date_q, type, variable)] # averages
levels(dt_plot$variable) <- c("Tier-1", "Basel III")
p1 <- ggplot(data=dt_plot, aes(x=date_q, y=value, colour=type, linetype=variable)) +
geom_line() +
scale_color_discrete(name="Risk-weighting:") +
scale_linetype_discrete(name="Ratio:") +
labs(
x="",
y="Ratio"
) +
geom_vline(xintercept = zoo::as.yearqtr("2007 Q1")) +
theme(legend.position="top")
dt_plot <- dt_plot[,.(value=value[type=="IRB"] - value[type=="SA"]), by=.(date_q, variable)]
dt_plot <- dt_plot[,.(date_q=date_q,value=(value-value[date_q=="2007 Q1"])/value[date_q=="2007 Q1"]*100),by=variable]
p2 <- ggplot(dt_plot, aes(x=date_q, y=value, linetype=variable)) +
geom_col(position = "dodge", fill="white", colour="black") +
labs(
x="Time",
y="Difference"
) +
scale_linetype_discrete(name="Ratio:") +
theme(legend.position="none")
library(gridExtra)
grid.arrange(p1,p2, heights=c(2,1), ncol=1)
?xtable
library(xtable)
options(xtable.comment = FALSE)
xtab = data.frame(c(summary(dt[date_q=="2007 Q1"]$bsize_)))
colnames(xtab) = "Total assets (logs)"
xtable(xtab, label = "Distribution of banks' total assets as of 2017 Q1.")
dt[,D:=ifelse(date_q<"2007 Q1",1,0)] # define treatment indicator
dt
dt[,D:=ifelse(date_q<"2007 Q1",0,1)] # define treatment indicator
dt
dt[,D:=NULL]
dt[,post:=ifelse(date_q<"2007 Q1",0,1)] # define treatment indicator
dt
unique(dt$type)
dt[,post:=ifelse(date_q<"2007 Q1",0,1)] # define structural break indicator
dt[,D:=ifelse(type=="IRB",1,0)] # define treatment dummy
mod_pooled <- lm(lncredit ~ D + post + post * D)
mod_pooled <- lm(lncredit ~ D + post + post * D, data = dt)
summary(mod_pooled)
mod_fe <- felm(lncredit ~ D + post + post * D | firmid + bankid, data = dt, cmethod = 'cgm2')
library(felm)
library(lfe)
mod_fe <- felm(lncredit ~ D + post + post * D | firmid + bankid, data = dt, cmethod = 'cgm2')
summary(mod_fe)
library(lfe)
mod_fe <- felm(lncredit ~ D + post + post * D | bankid, data = dt, cmethod = 'cgm2')
summary(mod_fe)
dt
library(lfe)
mod_fe <- felm(lncredit ~ D + post + post * D | firmid, data = dt, cmethod = 'cgm2')
summary(mod_fe)
library(lfe)
mod_fe <- felm(lncredit ~ post * D | firmid + bankid, data = dt, cmethod = 'cgm2')
summary(mod_fe)
library(lfe)
mod_fe <- felm(lncredit ~ post * D | date_q + bankid, data = dt, cmethod = 'cgm2')
summary(mod_fe)
dt[,post:=ifelse(date_q<"2007 Q1",0,1)] # define structural break indicator
dt[,D:=ifelse(type=="IRB",1,0)] # define treatment dummy
mod_pooled <- lm(basel_lev ~ D + post + post * D, data = dt)
summary(mod_pooled)
dt
mod_pooled <- lm(lncredit ~ post * D, data = dt)
summary(mod_pooled)
dt
library(lfe)
mod_fe <- felm(lncredit ~ post * D | date_q)
library(lfe)
mod_fe <- felm(lncredit ~ post * D | date_q, data=dt)
summary(mod_fe)
dt$date_q
levels(dt$date_q)
index(dt$date_q)
class(dt$date_q)
?yearqtr
as.numeric(dt$date_q)
(as.numeric(dt$date_q)-2006)*4
dt[,t:=(as.numeric(date_q)-2006)*4]
mod_fe <- felm(lncredt ~ post * D * t | date_q + bankid)
mod_fe <- felm(lncredit ~ post * D * t | date_q + bankid)
mod_fe <- felm(lncredit ~ post * D * t | date_q + bankid, data=dt)
summary(mod_fe)
dt[,t:=(as.numeric(date_q)-2006)*4]
library(lfe)
mod_fe <- felm(lncredit ~ D * t | date_q + bankid, data=dt)
summary(mod_fe)
dt[,t:=(as.numeric(date_q)-2007)*4]
dt
dt[,t:=(as.numeric(date_q)-2007)*4]
library(lfe)
mod_fe <- felm(lncredit ~ D * t | date_q + bankid, data=dt[t!=0])
summary(mod_fe)
mod_fe$coefficients
mod_fe$beta
mod_fe$fe
dt[,t:=(as.numeric(date_q)-2007)*4]
library(lfe)
mod_fe <- felm(lncredit ~ D * t | date_q, data=dt[t!=0])
summary(mod_fe)
mod_fe$beta
mod_fe$fe
dt
?felm
rm(list=ls())
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning = FALSE)
library(data.table)
dt <- fread("data/ps2.csv")
dt[,date_q:=zoo::as.yearqtr(2006 + (date_q-min(date_q))/4)]
library(xtable)
options(xtable.comment = FALSE)
xtab = data.frame(c(summary(dt[date_q=="2007 Q1"]$bsize_)))
colnames(xtab) = "Total assets (logs)"
xtable(xtab, label = "Distribution of banks' total assets as of 2017 Q1.")
library(ggplot2)
theme_set(theme_bw())
dt[,total_assets_mn:=exp(bsize_)/1e6]
# Assign indicator:
dt_sub <- unique(dt[date_q=="2007 Q1", .(bankid, bsize_)])[,type:=ifelse(bsize_>quantile(bsize_, 0.75),"IRB", "SA")]
dt_sub[,bsize_:=NULL]
setkey(dt, bankid)
setkey(dt_sub, bankid)
dt <- dt_sub[dt]
# Prepare plot:
dt_plot <- melt(dt[date_q=="2007 Q1"], id.vars = c("firmid", "bankid", "date_q", "type"), measure.vars = c("bsize_", "total_assets_mn"))
levels(dt_plot$variable) <- c("Logs", "Levels (millions)")
p <- ggplot(data=dt_plot, aes(x=value, fill=type)) +
geom_histogram(colour="blue") +
scale_fill_manual(
name="Risk-weighting:",
values=c("lightblue", "white")
) +
labs(
x = "Total assets",
y = "Count"
) +
facet_wrap(
~ variable,
scales = "free"
)
p
dt[,basel_lev:=(bcet1_*exp(bsizerw_))/exp(bsize_)] # compute leverage ratio
dt_plot <- unique(melt(dt, id.vars = c("bankid", "date_q", "type"), measure.vars = c("bcet1_", "basel_lev")))
dt_plot <- dt_plot[,.(value=mean(value)),by=.(date_q, type, variable)][order(date_q, type, variable)] # averages
levels(dt_plot$variable) <- c("Tier-1", "Basel III")
p1 <- ggplot(data=dt_plot, aes(x=date_q, y=value, colour=type, linetype=variable)) +
geom_line() +
scale_color_discrete(name="Risk-weighting:") +
scale_linetype_discrete(name="Ratio:") +
labs(
x="",
y="Ratio"
) +
geom_vline(xintercept = zoo::as.yearqtr("2007 Q1")) +
theme(legend.position="top")
dt_plot <- dt_plot[,.(value=value[type=="IRB"] - value[type=="SA"]), by=.(date_q, variable)]
dt_plot <- dt_plot[,.(date_q=date_q,value=(value-value[date_q=="2007 Q1"])/value[date_q=="2007 Q1"]*100),by=variable]
p2 <- ggplot(dt_plot, aes(x=date_q, y=value, linetype=variable)) +
geom_col(position = "dodge", fill="white", colour="black") +
labs(
x="Time",
y="Difference"
) +
scale_linetype_discrete(name="Ratio:") +
theme(legend.position="none")
library(gridExtra)
grid.arrange(p1,p2, heights=c(2,1), ncol=1)
dt[,post:=ifelse(date_q<"2007 Q1",0,1)] # define structural break indicator
dt[,D:=ifelse(type=="IRB",1,0)] # define treatment dummy
mod_pooled <- lm(lncredit ~ post * D, data = dt)
dt[,t:=(as.numeric(date_q)-2007)*4]
dt
dt[,.(lncredit, D, t, bankid, date_q)]
dcast(dt[,.(lncredit, D, bankid, date_q, t)], value.var = "t")
dcast(dt[,.(lncredit, D, bankid, date_q, t)], lncredit + D + bankid ~ date_q, value.var = "t")
dcast(dt[,.(lncredit, D, bankid, date_q, t)], lncredit + bankid ~ D, value.var = "lncredit")
dcast(dt[,.(lncredit, D, bankid, date_q, t)], lncredit ~ D, value.var = "lncredit")
dcast(dt[,.(lncredit, D, bankid, date_q, t)], lncredit ~ t, value.var = "D")
dcast(dt[,.(lncredit, D, bankid, t)], lncredit + bankid ~ t, value.var = "D")
test <-  dcast(dt[,.(lncredit, D, bankid, t)], lncredit + bankid ~ t, value.var = "D")
unique(test)
dt
test <-  dcast(unique(dt[,.(lncredit, D, bankid, t)]), lncredit + bankid ~ t, value.var = "D")
test
rm(test)
library(lfe)
mod_fe <- felm(lncredit ~ D * post | date_q, data=dt[t!=0])
mod_fe$inv
getfe(mod_fe=
getfe(mod_fe)
felm(lncredit ~ infl | date_q + bankid, data=dt)
dt
dt[,id := paste0(bankid,firmid)]
felm(lncredit ~ infl | date_q + id, data=dt)
mean(runif(1000))
plot(hist(runif(1000)))
